id: MDE - Retrieve File
version: 9
contentitemexportablefields:
  contentitemfields:
    packID: MicrosoftDefenderAdvancedThreatProtection
    packName: Microsoft Defender for Endpoint
    itemVersion: 1.11.4
    fromServerVersion: 6.5.0
    toServerVersion: ""
    definitionid: ""
vcShouldKeepItemLegacyProdMachine: false
name: MDE - Retrieve File
description: |-
  This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.
  This playbook uses the Live Response feature to retrieve a file from an endpoint./nNote that the endpoint id will be set from the incident field "DeviceID".
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 94cc3210-9c2d-4a3b-8959-b1f377dccbb0
    type: start
    task:
      id: 94cc3210-9c2d-4a3b-8959-b1f377dccbb0
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": -140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 3a524860-88b6-411d-82b8-dfc9ae5263d8
    type: regular
    task:
      id: 3a524860-88b6-411d-82b8-dfc9ae5263d8
      version: -1
      name: Retrieve File From MDE Live Response
      description: 'Collect a file from a device. NOTE: Backslashes in the path must
        be escaped.'
      script: '|||microsoft-atp-live-response-get-file'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      comment:
        simple: Retrieving file - XSOAR PB ${incident.id}
      machine_id:
        simple: ${incident.deviceid}
      path:
        simple: ${inputs.paths}
    separatecontext: false
    continueonerror: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -60,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: 8a7e0229-c76b-4de6-8166-2f693b1ff2c2
    type: title
    task:
      id: 8a7e0229-c76b-4de6-8166-2f693b1ff2c2
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 730
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: e2ab0b64-e4e8-464c-848c-5e1e182224d0
    type: regular
    task:
      id: e2ab0b64-e4e8-464c-848c-5e1e182224d0
      version: -1
      name: Unzip results
      description: Unzips a file using file name or entry ID to specify a file. Unzipped
        files are loaded to the War Room and names are put into the context.
      scriptName: UnzipFile
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      entryID:
        complex:
          root: File
          filters:
          - - operator: containsString
              left:
                value:
                  simple: File.Extension
                iscontext: true
              right:
                value:
                  simple: gz
              ignorecase: true
          - - operator: containsString
              left:
                value:
                  simple: File.Name
                iscontext: true
              right:
                value:
                  simple: Response Result
              ignorecase: true
          accessor: EntryID
          transformers:
          - operator: LastArrayElement
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 550
        }
      }
    note: false
    evidencedata:
      description:
        simple: Retrieved Files
      customfields: {}
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: 801e51fe-c520-4660-8dc9-65dc9d5b3721
    type: condition
    task:
      id: 801e51fe-c520-4660-8dc9-65dc9d5b3721
      version: -1
      name: Any errors from the retrieval?
      description: Checks whether specific entries returned an error. Use ${lastCompletedTaskEntries}
        to check the previous task entries. If an array is provided, will return 'yes'
        if one of the entries returned an error.
      scriptName: isError
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "no":
      - "3"
    scriptarguments:
      entryId:
        simple: ${lastCompletedTaskEntries}
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -60,
          "y": 360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: a682d3e4-e248-4b3e-8106-95fb3cb2d377
    type: condition
    task:
      id: a682d3e4-e248-4b3e-8106-95fb3cb2d377
      version: -1
      name: File Path was provided?
      description: Was file path provided?
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.paths
            iscontext: true
          right:
            value: {}
      - - operator: match
          left:
            value:
              simple: inputs.paths
            iscontext: true
          right:
            value:
              simple: ^[a-zA-Z]:(\\[\w_\d-])*([\\]|[.]*[a-zA-Z0-9_-])*?$
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 10
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
system: true
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 935,
        "width": 842.5,
        "x": -300,
        "y": -140
      }
    }
  }
inputs:
- key: paths
  value: {}
  required: false
  description: The file paths to be provided.
  playbookInputQuery: null
outputs: []
